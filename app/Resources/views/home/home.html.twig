{% extends 'base.html.twig' %}
    
{% block body %}

    <!-- Header -->
    <div class="intro-header">
        <div class="container">

            <div class="row">
                <div class="col-lg-8">
                    <div class="intro-message">
                        <h2>Home</h2>
                            {{ form_start(form) }}
                            {{ form_row(form.name) }}
                            {{ form_row(form.description) }}
                            <div class="form-group">
                                <label class="control-label required" for="form_pickupAddr">Pickup Address</label>
                                <input type="text" id="autocomplete" name="form[pickupAddr]" onFocus="geolocate()" placeholder="123 Main street, Ottawa, Ontario, K1S5J6" class="form-control"/>
                            </div>
                            {#<div id="autocomplete">#}
                            {#{{ form_row(form.pickupAddr) }}#}
                            {#</div>#}
                            {{ form_row(form.destAddr) }}
                            {#{{ form_row(form.createdUserId) }}#}
                            {{ form_row(form.cost) }}
                            {{ form_row(form.deliveryDate) }}
                            {{ form_row(form.lastUpdated) }}
                            {#{{ form_row(form.deliverUserId) }}#}

                            <button type="submit" class="btn btn-default">Add</button>
                    {{ form_end(form) }}
                    </div>
                </div>
            </div>

        </div>
        <!-- /.container -->

    </div>
    <!-- /.intro-header -->

<script>
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

var placeSearch, autocomplete;
var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

// [START region_fillform]
function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
// [END region_geolocation]

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBxDimVEjDDET4Qcra38zkE_epDvFQxOMo&signed_in=true&libraries=places&callback=initAutocomplete" async defer></script>

{% endblock %}
